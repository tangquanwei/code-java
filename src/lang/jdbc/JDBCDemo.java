package lang.jdbc;

// 1.导入jar包 lib文件

import org.junit.jupiter.api.Test;

import java.sql.*;

/**
 * 导入jar包
 * 注册驱动
 * 获取数据库连接对象 Connection
 * 定义sql
 * 获取执行sql语句的对象 Statement
 * 执行sql,接收返回结果
 * 处理结果
 */

/**
 * DriverManager:驱动管理对象 功能: 1. 注册驱动 2. 获取连接对象 参数: ----url:
 * "jdbc://ip(域名):端口/数据库名" DriverManager.registerDriver(new Driver());
 * Connection:数据库连接对象 1. 获取执行SQL的对象 ----Statement createStatement() throws
 * SQLException; ----PreparedStatement prepareStatement(String sql) 2. 获取事务
 * ----开启 setAutoCommit(boolean autoCommit) ----提交 commit() ----回滚 rollback()
 * Statement:执行SQL的对象 1.方法: ----boolean execute(String sql) throws SQLException;
 * ----执行DML, DDL: int executeUpdate(String sql, int autoGeneratedKeys) 返回值:修改行数
 * ----DQL: ResultSet executeQuery(String sql) throws SQLException;
 * PreparedStatement:执行SQL的对象 ResultSet:结果集对象:封装查询结果 游标操作: ----next():游标下移
 * ----getXxx():获取数据 参数:int:列编号从一开始 String:列名称
 */
public class JDBCDemo {
    @Test
    public void jdbcDemo() throws ClassNotFoundException, SQLException {
        // 2.注册驱动 MySql5之后可省略
        Class.forName("com.mysql.cj.jdbc.Driver");
        // 3.获取数据库链接对象
        // mysql -h 39.99.42.127 -P 3306 -u root -p

        // Connection root =
        // DriverManager.getConnection("jdbc:mysql://39.99.42.127/quanwei", "root",
        // ",./,./");
        Connection root = DriverManager.getConnection("jdbc:mysql:///quanwei", "root", ",./,./");
        String sql = "show databases;";
        Statement statement = root.createStatement();
        boolean count = statement.execute(sql);
        System.out.println(count);
    }

    @Test
    public void testInsert() {
        Connection connection = null;
        Statement statement = null;
        try {
            // 1.注册驱动
            // Class.forName("com.mysql.cj.jdbc.Driver");
            // 2.定义sql
            String sql = "insert into students values(null,'Quawei','男');";
            String query = "select * from students;";
            String update = "update students set name='唐权威' where id=3 ";
            String delete = "delete from students where id=2";
            // 3.获取Connection对象
            connection = DriverManager.getConnection("jdbc:mysql:///quanwei", "root", ",./,./");
            // 4.获取执行sql的对象
            statement = connection.createStatement();
            // 5.执行sql
            // int i = statement.executeUpdate(sql);
            ResultSet resultSet = statement.executeQuery(query);
            // int executeUpdate = statement.executeUpdate(update);
            // int update1 = statement.executeUpdate(delete);

            // 6.处理结果
            // System.out.println(i);
            // if (i > 0)
            // System.out.println("添加成功");
            // else
            // System.out.println("添加失败");
            // 游标下移
            while (resultSet.next())
                // 获取数据
                System.out.println(resultSet.getInt(1) + resultSet.getString(2) + resultSet.getString(3));
            // System.out.println(executeUpdate);
            // System.out.println(update1);

        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            // 7.释放资源
            if (statement != null)
                try {
                    statement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    @Test
    public void testUtils() {
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            // 1.获取连接对象
            connection = JDBCUtils.getConnection();
            // 2.获取执行对象statement
            statement = connection.createStatement();
            // 3.定义sql
            String query = "select * from students";
            // 4.执行sql
            resultSet = statement.executeQuery(query);
            // 5.处理结果
            while (resultSet.next())
                System.out.println(resultSet.getInt(1) + resultSet.getString(2) + resultSet.getString(3));
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            JDBCUtils.close(resultSet, statement, connection);
        }
    }
}
